= form_for @document , remote:true do |f|
  - if @document.errors.any?
    %ul
      - @document.errors.full_messages.each do |msg|
        %li.text-error= msg

  = f.label "제목"
  = f.text_field :title , class:"input-xxlarge"
  = f.label "내용"
  %textarea#document-content.input-xxlarge{name:"document[content]", rows:"15"}
    = @document.content

  
  /
  / attach file time token
  /
  %input#time-token{type:"hidden" , name:"time-token" , value:"#{Time.now.to_i}"}

  /
  / already file exist info
  /

  -@document.attachfiles.each_with_index do |af,inx|
    %p
      = check_box_tag "attachfiles[file_#{inx}]", af.id
      = af.filename

  /application_controller
  %br
  %input#document-user_id{type:"hidden" , name:"document[user_id]" , value:@current_user.id}



  /%p#support-notice
  /  Your browser does not support Ajax uploads :-(<br/>The form will be submitted as normal.

  %a#file-choose.btn.btn-mini 파일선택

  /The file to upload
  %input#file-id{ type:"file", name:"our-file[]", multiple:""}

  %div#fileinfo

  /Also by default, we disable the upload button.
  /If Ajax uploads are supported we'll enable it.
  %input#upload-button-id.btn-primary.btn-mini{type:"button", value:"Upload", disabled:"disabled"}

  

  %br

  %p#upload-status
  %p#progress
  %pre#result

  %br

  .btn-group.pull-right
    = f.submit "저장" , remote:true , class:"btn btn-primary btn-mini"
    = link_to "목록" , documents_path , remote:true , class:"btn btn-primary btn-mini"
  
:javascript
//https://github.com/newbamboo/example-ajax-upload

  $.ajaxSetup({
    beforeSend: function(xhr) {
      xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
    }
  }); 

  $(function(){

    $("#file-id").css("visibility","hidden");

      // web editor
      $('#document-content').wysiwyg({
      });

      $("#file-choose").click(function(){
        $("#file-id").click();
      });

  });

  var upload_file_list=[];
  var index=0;

  $("#file-id").bind("change",function(){
    var fileInput = document.getElementById('file-id');
    var files = fileInput.files;
    for(var i=0;i<files.length;i++){
      addToFileList(files[i]);
    }
    //$("#upload-button-id").click();
  });

  function addToFileList(file){
    var fid="fnum"+index;

    var appendString="<li id='li"+fid+"'>"+file.name+"  <a id='"+fid+"' href='#' onClick=\"removeFile('"+fid+"',"+index+");\">X</a></li>"
    
    $("#fileinfo").append(appendString);

    var formdata=new FormData();
    formdata.append("our-file",file);
    // identify temp file value - Time.now
    formdata.append("time-token",$("#time-token").val() );

    upload_file_list[index]=formdata;

    index++;
  }

  function removeFile(fid,inx){
    $("#li"+fid).remove();
    upload_file_list[inx]=null;
  }

  // Function that will allow us to know if Ajax uploads are supported
  function supportAjaxUploadWithProgress() {
    return supportFileAPI() && supportAjaxUploadProgressEvents() && supportFormData();

    // Is the File API supported?
    function supportFileAPI() {
      var fi = document.createElement('INPUT');
      fi.type = 'file';
      return 'files' in fi;
    };

    // Are progress events supported?
    function supportAjaxUploadProgressEvents() {
      var xhr = new XMLHttpRequest();
      return !! (xhr && ('upload' in xhr) && ('onprogress' in xhr.upload));
    };

    // Is FormData supported?
    function supportFormData() {
      return !! window.FormData;
    }
  }

  // Actually confirm support
  if (supportAjaxUploadWithProgress()) {
    //var notice = document.getElementById('support-notice');
    //notice.innerHTML = "Your browser supports HTML uploads. Go try me! :-)";
    var uploadBtn = document.getElementById('upload-button-id');
    uploadBtn.removeAttribute('disabled');

    // Init the Ajax form submission
    //initFullFormAjaxUpload();

    // Init the single-field file upload
    initFileOnlyAjaxUpload();
  }

  // function initFullFormAjaxUpload() {
  //   var form = document.getElementById('form-id');
  //   form.onsubmit = function() {
  //     // FormData receives the whole form
  //     var formData = new FormData(form);

  //     // We send the data where the form wanted
  //     var action = form.getAttribute('action');

  //     // Code common to both variants
  //     sendXHRequest(formData, action);

  //     // Avoid normal form submission
  //     return false;
  //   }
  // }

  function initFileOnlyAjaxUpload() {
    var uploadBtn = document.getElementById('upload-button-id');
    uploadBtn.onclick = function (evt) {
      var formData = new FormData();

      // Since this is the file only, we send it to a specific location
      var action = '/attachfile-upload';

      // FormData only has the file
      var fileInput = document.getElementById('file-id');
      var file = fileInput.files;

      //for(var i=0;i<file.length;i++){
      //  sendXHRequest(file[i], action);
      //}

      for(var ii=0;ii<upload_file_list.length;ii++){
        if(upload_file_list[ii] != null){
          sendXHRequest(upload_file_list[ii], action);
        }
      }

    }
  }

  // Once the FormData instance is ready and we know
  // where to send the data, the code is the same
  // for both variants of this technique
  function sendXHRequest(formData, uri) {
    // Get an XMLHttpRequest instance
    var xhr = new XMLHttpRequest();

    // Set up events
    xhr.upload.addEventListener('loadstart', onloadstartHandler, false);
    xhr.upload.addEventListener('progress', onprogressHandler, false);
    xhr.upload.addEventListener('load', onloadHandler, false);
    xhr.addEventListener('readystatechange', onreadystatechangeHandler, false);

    // Set up request
    xhr.open('POST', uri, true);

    // Fire!
    xhr.send(formData);
  }

  // Handle the start of the transmission
  function onloadstartHandler(evt) {
    var div = document.getElementById('upload-status');
    div.innerHTML = 'Upload started!';
  }

  // Handle the end of the transmission
  function onloadHandler(evt) {
    var div = document.getElementById('upload-status');
    div.innerHTML = 'Upload successful!';
  }

  // Handle the progress
  function onprogressHandler(evt) {
    var div = document.getElementById('progress');
    var percent = evt.loaded/evt.total*100;
    div.innerHTML = 'Progress: ' + percent + '%';
  }

  // Handle the response from the server
  function onreadystatechangeHandler(evt) {
    var status = null;

    try {
      status = evt.target.status;
    }
    catch(e) {
      return;
    }

    if (status == '200' && evt.target.responseText) {
      var result = document.getElementById('result');
      result.innerHTML = '<p>The server saw it as:</p><pre>' + evt.target.responseText + '</pre>';
    }
  }